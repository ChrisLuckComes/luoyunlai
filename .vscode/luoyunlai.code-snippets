{
  // Place your luoyunlai.xyz 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "react": {
    "prefix": "react",
    "body": "import { classMap } from '@/constants/constant';\nimport { Anchor } from 'antd';\nimport { UseMarkDown } from '@/hooks/useMarkdown';\nconst { Link } = Anchor;\n\nexport default function Index() {\n\treturn <article id=\"root\" className={classMap.article}>\n<main className={classMap.content}>\n</main>\n</article>;\n}"
  },
  "h2": {
    "prefix": "h2",
    "body": "<h2 id=\"diff\" className={classMap.articleTitle}></h2>"
  },
  "h3": {
    "prefix": "h3",
    "body": "<h3 id=\"diff\" className={classMap.articleSubTitle}></h3>"
  },
  "assist": {
    "prefix": "assist",
    "body": "<div className={classMap.assist}></div>"
  },
  "ul": {
    "prefix": "ul",
    "body": "<ul className={classMap.ul}></ul>"
  },
  "anchor": {
    "prefix": "anchor",
    "body": "<Anchor className=\"anchor\" getContainer={() => document.getElementById('content') as HTMLElement}></Anchor>"
  },
  "anchorLink": {
    "prefix": "link",
    "body": "<Link href=\"#\" title=\"\"></Link>"
  },
  "href": {
    "prefix": "href",
    "body": "<a className={classMap.href} target=\"_blank\" rel=\"noreferrer\" href=\"\"></a>",
    "description": "新窗口超链接"
  },
  "useMarkdown": {
    "prefix": "markdown",
    "body": "<UseMarkDown markdown={}></UseMarkDown>"
  },
  "lazy": {
    "prefix": "lazy",
    "body": "lazy(()=>import(''))"
  },
  "svg": {
    "prefix": "svg",
    "body": "<embed src=\"\" type=\"image/svg+xml\" />"
  },
  "main": {
    "prefix": "main",
    "body": "<main className={classMap.content}>\n\n</main>"
  },
  "image": {
    "prefix": "image",
    "body": "<LazyImage src={} />"
  }
}
