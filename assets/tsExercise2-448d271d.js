import{j as e,d as s}from"./index-274349b8.js";import{T as h,r as p,o as c,d,e as u,t as m,l as f,p as y,f as x,s as j,u as T,g as k}from"./toggle-4f90c099.js";import{A as R}from"./Anchor-b0d09d4b.js";import"./useMarkdown-04b9ffa9.js";import"./index-fc2fd434.js";const t=({id:i,name:n,source:o,className:a=s.articleTitle})=>{const{title:r,content:l}=o;return e.jsxs(e.Fragment,{children:[e.jsx("h2",{id:i,className:a,children:n}),r,e.jsx(h,{content:l})]})};function C(){return e.jsxs("article",{id:"rootArticle",className:s.article,children:[e.jsxs("main",{className:s.content,children:[e.jsx(t,{id:"getReturnType",name:"GetReturnType",source:p,className:"font-semibold text-h2 mb-2"}),"使用",e.jsx("code",{children:"infer"}),"关键字来推导函数的返回值类型",e.jsx(t,{id:"omit",name:"Omit",source:c}),"在Object类型中，key如果是",e.jsx("strong",{children:"never"}),"就不会被设置",e.jsx(t,{id:"readonly2",name:"Readonly 2",source:d}),"需要用&将提供/未提供属性的两个类型合在一起",e.jsx(t,{id:"deepReadonly",name:"DeepReadonly",source:u}),"递归处理对象。",e.jsx(t,{id:"tupleToUnion",name:"Tuple To Union",source:m}),"使用",e.jsx("code",{children:"infer"}),"推断类型，配合递归完成。",e.jsx(t,{id:"last",name:"Last",source:f}),e.jsx(t,{id:"pop",name:"Pop",source:y}),e.jsx(t,{id:"push",name:"Push",source:x}),e.jsx(t,{id:"shift",name:"Shift",source:j}),e.jsx(t,{id:"unshift",name:"Unshift",source:T}),e.jsx(t,{id:"chainableOptions",name:"Chainable Options",source:k}),e.jsxs("ul",{children:[e.jsxs("li",{children:["1. 链式调用 ",e.jsx("br",{}),e.jsx("code",{children:"option()"}),"的返回值仍然是Chainable，并且传入的类型是已存储到的类型。"]}),e.jsx("li",{children:"2. option传参使用泛型，这样可以自行推断取到key,value的类型"}),e.jsx("li",{children:"3. Chainable传入类型需要排除当前key，实现覆盖"})]})]}),e.jsx(R,{items:[{title:"GetReturnType",key:"getReturnType",href:"#getReturnType"},{title:"Omit",key:"omit",href:"#omit"},{title:"Readonly 2",key:"readonly2",href:"#readonly2"},{title:"DeepReadonly",key:"deepReadonly",href:"#deepReadonly"},{title:"Tuple To Union",key:"tupleToUnion",href:"#tupleToUnion"},{title:"Last",key:"last",href:"#last"},{title:"Pop",key:"pop",href:"#pop"},{title:"Push",key:"push",href:"#push"},{title:"Shift",key:"shift",href:"#shift"},{title:"Unshift",key:"unshift",href:"#unshift"},{title:"Chainable Options",key:"chainableOptions",href:"#chainableOptions"}]})]})}export{C as default};
